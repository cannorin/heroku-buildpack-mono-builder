#!/bin/bash

set -e
set -x

VERSION=`cat ./latest | cut -c 1-12`
cd ~


# full build, ~115mb compressed
tar cfz mono-full.tar.gz mono
cp mono-full.tar.gz $CIRCLE_ARTIFACTS

# mono is read only
mkdir mono2
cp -r mono/* mono2
# free up space
rm -f mono2/bin/mono-boehm
rm -f mono2/bin/monodis
rm -f mono2/bin/pedump
rm -f mono2/bin/mprof-report
rm -rf mono2/include
rm -rf mono2/share
rm -f mono2/lib/*.a
rm -f mono2/lib/libmonosgen*.so
rm -f mono2/lib/libmonoboehm*.so
rm -rf mono2/lib/monodoc
rm -rf mono2/lib/mono-source-libs
rm -rf mono2/lib/pkgconfig

mkdir x
mv mono2 x/mono
cd x
# smaller build, ~52mb compressed
tar cfz ../mono.tar.gz mono
cd ..
cp mono.tar.gz $CIRCLE_ARTIFACTS

git config --global user.email "AdamBurgess@users.noreply.github.com"
git config --global user.name "Adam Burgess"
git clone git@github.com:AdamBurgess/heroku-buildpack-mono.git
cd heroku-buildpack-mono

if git rev-parse $VERSION >/dev/null 2>&1
then
    git tag -d $VERSION && git push origin :refs/tags/$VERSION
fi

echo $VERSION>latest
git add latest
git commit -m "built mono version $VERSION." || true
git tag $VERSION
git push
git push --tags

mkdir dist
mv ../mono.tar.gz dist/mono-$VERSION.tar.gz
mv ../mono-full.tar.gz dist/mono-full-$VERSION.tar.gz

go get github.com/tcnksm/ghr
ghr \
    -u AdamBurgess \
    -r heroku-buildpack-mono \
    $VERSION dist
